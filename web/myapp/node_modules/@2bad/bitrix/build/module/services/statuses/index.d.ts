import { Call } from '../../client/methods/call';
interface Dependencies {
    readonly call: Call;
}
declare const _default: ({ call }: Dependencies) => {
    fields: () => Promise<import("../../payloads").GetPayload<import("../common").Fields>>;
    create: (fields: Partial<import("./entities").Status>) => Promise<import("../../payloads").GetPayload<number>>;
    delete: (id: string | number, params?: {
        readonly FORCED?: "Y" | "N" | undefined;
    } | undefined) => Promise<import("../../payloads").GetPayload<boolean>>;
    get: (id: string | number) => Promise<import("../../payloads").GetPayload<import("./entities").Status>>;
    list: (params?: {
        readonly order?: Record<string, any> | undefined;
        readonly filter?: Record<string, any> | undefined;
    }) => Promise<import("../../payloads").ListPayload<import("./entities").Status>>;
    update: (id: string | number, fields: Record<string, any>) => Promise<import("../../payloads").GetPayload<boolean>>;
};
export default _default;
